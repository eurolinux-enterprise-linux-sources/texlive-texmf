%%%%%%%%%%%%%%%%%%%%%%%%  fullpict.doc %%%%%%%%%%%%%%%%%%%%%%%%%
%%  Bruce Shawyer  --  March 2001   --  bshawyer@math.mun.ca  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

This is an updated version of the previous Feb 99 and March 96 documents,
containing information on the new an improved fullpict.sty

Additional macros, making use of the size of the scaled picture box, are:

\xaxis          --- draws a vector just longer than the axis length
\yaxis          --- draws a vector just longer than the axis length
\axes           --- draws vectors  just longer than the axes lengths
\xticks{#1}[#2] --- \#1 -- gap between ticks,
                --- \#2 -- length of tick -- default value is  1
\yticks{#1}[#2] --- \#1 -- gap between ticks,
                --- \#2 -- length of tick -- default value is  1
\ticks{#1}[#2]  --- \#1 -- gap between ticks,
                --- \#2 -- length of tick -- default value is  1
\xnums{#1}[#2]  --- \#1 -- gap between numbers,
                --- \#2 -- dist below axis -- default value is  .25
\ynums{#1}[#2]  --- \#1 -- gap between numbers,
                --- \#2 -- dist to left of axis -- default value is  .25
\nums{#1}[#2]   --- \#1 -- gap between numbers,
                --- \#2 -- dist from axis -- default value is  .25
\origin{#1}     --- \#1 -- size of circle centred on the origin

======================= February 99 file =====================

This is an updated version of the previous March 96 document,
containing information on the new an improved fullpict.sty

There is a new environment ---  scaledpicture

This enhances the previous enviroment   scalepicture   in that it
works properly inside tabular and minipage environments, and also
choose at appropriate font size for the scale of the picture.

New commands for the placement of labels are included. This removes
the enormous amount of guesswork previously required to place a
label appropriately on a diagram. Geographic north, south, east
and west are used.

They are:	
  \nput(x,y){label} - places the label north of (above) the point (x,y)
  \sput(x,y){label} - places the label south of (below) the point (x,y)
  \eput(x,y){label} - places the label east (to the right) of the point (x,y)
  \wput(x,y){label} - places the label west (to the left) of the point (x,y)
  \neput(x,y){label}
  \seput(x,y){label}
  \nwput(x,y){label}
  \swput(x,y){label}
A general form is available:
  \angleput{angle}[radius] (x,y){label}
	angle	in degrees, between -360 and +360
	radius	[optional - default 1] to adjust the distance from the point (x,y)
	(x,y)	the coordinates of the point
	label	the label

I and my co-workers have found that these macros save much time.

For the information of those interested in how the angle works,
a polygon of 24 sides is used instead of a circle. This avoids
trigonometry, for linear functions give the sides. The difference
between a true circle and this polygon become noticeable only for
large values of  radius , which are unlikely to be used.

========================= March 96 file =============================
I make a lot of use of the \LaTeX picture environment, in various
documents with different text widths.  Also, I teach \LaTeX as
part of a course that involves writing a report on a mathematical
experiment.  The greatest difficulty is choosing an appropriate
\unitlength so that the picture fits nicely on the page. Hence the
genesis of ``fullpict.sty''.

In order that a picture not fill up too much of the width of the
printed line, I chose 90% of that width because that seemed to be
most pleasing to the eye.  The macro provides three new picture
environment that behave exactly like the \LaTeX picture
environment.

The advantage is the there is no need to preselect \unitlength. The
appropriate value for \unitlength is calculated from the x--length
given to the picture.

The three environments

1.   \begin{fullpict}(a,b)[(c,d)]
     ...
     \end{fullpict}

     As in the picture environment, the (c,d) is optional and
     defaults to (0,0) if not given.

     This gives a picture 90% of the text width.

2.   \begin{halfpict}(a,b)[(c,d)]
     ...
     \end{halfpict}

     As in the picture environment, the (c,d) is optional and
     defaults to (0,0) if not given.

     This gives a picture 45% of the text width.

3.   \begin{scalepict}{percent}(a,b)[(c,d)]
     ...
     \end{scalepict}

     As in the picture environment, the (c,d) is optional and
     defaults to (0,0) if not given.

     A number must replace ``percent''. This is in the range:

     0 < percent < 112

     otherwise the picture will exceed the text width.  A percent
     of 100 gives the same as ``fullpict'', and a percent of 50
     gives the same as ``halfpict''.


Also available for other use is a macro ``\goodunit''.  This
calculates the appropriate unit length in the above environments.
